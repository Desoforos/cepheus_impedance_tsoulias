    jacobian(0,0) = 1;
    jacobian(0,1) = 0;
    jacobian(0,2) = (-1)*r0*sin(theta0)+(-1)*(l1+r1)*sin(q1+theta0)+(-1)*(l2+r2) *sin(q1+q2+theta0)+(-1)*(l3+r3)*sin(q1+q2+q3+theta0);
    jacobian(0,3) = ((-1)*l1+(-1)*r1)*sin(q1+theta0)+(-1)*(l2+r2)*sin(q1+q2+theta0)+(-1)*(l3+r3)*sin(q1+q2+q3+theta0);
    jacobian(0,4) = ((-1)*l2+(-1)*r2)*sin(q1+q2+theta0)+(-1)*(l3+r3)*sin(q1+q2+q3+theta0);
    jacobian(0,5) = ((-1)*l3+(-1)*r3)*sin(q1+q2+q3+theta0);
    jacobian(1,0) = 0;
    jacobian(1,1) = 1;
    jacobian(1,2) = r0*cos(theta0)+(l1+r1)*cos(q1+theta0)+(l2+r2)*cos(q1+q2+theta0)+(l3+r3)*cos(q1+q2+q3+theta0);
    jacobian(1,3) = (l1+r1)*cos(q1+theta0)+(l2+r2)*cos(q1+q2+theta0)+(l3+r3)*cos(q1+q2+q3+theta0);
    jacobian(1,4) = (l2+r2)*cos(q1+q2+theta0)+(l3+r3)*cos(q1+q2+q3+theta0);
    jacobian(1,5) = (l3+r3)*cos(q1+q2+q3+theta0);
    jacobian(2,0) = 0;
    jacobian(2,1) = 0;
    jacobian(2,2) = 1;
    jacobian(2,3) = 1;
    jacobian(2,4) = 1;
    jacobian(2,5) = 1;


    jacobiandot(0,0) = 0;
    jacobiandot(0,1) = 0;
    jacobiandot(0,2) = (-1)*r0*theta0dot*cos(theta0)+(-1)*(l1+r1)*(q1dot+theta0dot)*cos(q1+theta0)+(-1)*(l2+r2)*(q1dot+q2dot+theta0dot)*cos(q1+q2+theta0)+(-1)*(l3+r3)*(q1dot+q2dot+q3dot+theta0dot)*cos(q1+q2+q3+theta0);
    jacobiandot(0,3) = (-1)*(l1+r1)*(q1dot+theta0dot)*cos(q1+theta0)+(-1)*(l2+r2)*(q1dot+q2dot+theta0dot)*cos(q1+q2+theta0)+(-1)*(l3+r3)*(q1dot+q2dot+q3dot+theta0dot)*cos(q1+q2+q3+theta0);
    jacobiandot(0,4) = (-1)*(l2+r2)*(q1dot+q2dot+theta0dot)*cos(q1+q2+theta0)+(-1)*(l3+r3)*(q1dot+q2dot+q3dot+theta0dot)*cos(q1+q2+q3+theta0);
    jacobiandot(0,5) = (-1)*(l3+r3)*(q1dot+q2dot+q3dot+theta0dot)*cos(q1+q2+q3+theta0);
    jacobiandot(1,0) = 0;
    jacobiandot(1,1) = 0;
    jacobiandot(1,2) = (-1)*r0*theta0dot*sin(theta0)+(-1)*(l1+r1)*(q1dot+theta0dot)*sin(q1+theta0)+(-1)*(l2+r2)*(q1dot+q2dot+theta0dot)*sin(q1+q2+theta0)+(-1)*(l3+r3)*(q1dot+q2dot+q3dot+theta0dot)*sin(q1+q2+q3+theta0);
    jacobiandot(1,3) = (-1)*(l1+r1)*(q1dot+theta0dot)*sin(q1+theta0)+(-1)*(l2+r2)*(q1dot+q2dot+theta0dot)*sin(q1+q2+theta0)+(-1)*(l3+r3)*(q1dot+q2dot+q3dot+theta0dot)*sin(q1+q2+q3+theta0);
    jacobiandot(1,4) = (-1)*(l2+r2)*(q1dot+q2dot+theta0dot)*sin(q1+q2+theta0)+(-1)*(l3+r3)*(q1dot+q2dot+q3dot+theta0dot)*sin(q1+q2+q3+theta0);
    jacobiandot(1,5) = (-1)*(l3+r3)*(q1dot+q2dot+q3dot+theta0dot)*sin(q1+q2+q3+theta0);
    jacobiandot(2,0) = 0;
    jacobiandot(2,1) = 0;
    jacobiandot(2,2) = 0;
    jacobiandot(2,3) = 0;
    jacobiandot(2,4) = 0;
    jacobiandot(2,5) = 0;


    je11 = 1;
    je12 = 0;
    je13 = (-1)*r0*sin(theta0)+(-1)*(l1+r1)*sin(q1+theta0)+(-1)*(l2+r2)*sin(q1+q2+theta0)+(-1)*(l3+r3)*sin(q1+q2+q3+theta0);
    je14 = ((-1)*l1+(-1)*r1)*sin(q1+theta0)+(-1)*(l2+r2)*sin(q1+q2+theta0)+(-1)*(l3+r3)*sin(q1+q2+q3+theta0);
    je15 = ((-1)*l2+(-1)*r2)*sin(q1+q2+theta0)+(-1)*(l3+r3)*sin(q1+q2+q3+theta0);
    je16 = ((-1)*l3+(-1)*r3)*sin(q1+q2+q3+theta0); 
    ////////////
    je21 = 0;
    je22 = 1;
    je23 = r0*cos(theta0)+(l1+r1)*cos(q1+theta0)+(l2+r2)*cos(q1+q2+theta0)+(l3+r3)*cos(q1+q2+q3+theta0);
    je24 = (l1+r1)*cos(q1+theta0)+(l2+r2)*cos(q1+q2+theta0)+(l3+r3)*cos(q1+q2+q3+theta0);
    je25 = (l2+r2)*cos(q1+q2+theta0)+(l3+r3)*cos(q1+q2+q3+theta0);
    je26 = (l3+r3)*cos(q1+q2+q3+theta0);
    ///////////
    je31 = 0;
    je32 = 0;
    je33 = 1;
    je34 = 1;
    je35 = 1;
    je36 = 1;
    ///////////
    je(0,0) = je11;
    je(0,1) = je12;
    je(0,2) = je13;
    je(0,3) = je14;
    je(0,4) = je15;
    je(0,5) = je16;
    ///////////
    je(1,0) = je21;
    je(1,1) = je22;
    je(1,2) = je23;
    je(1,3) = je24;
    je(1,4) = je25;
    je(1,5) = je26;
    ///////////
    je(2,0) = je31;
    je(2,1) = je32;
    je(2,2) = je33;
    je(2,3) = je34;
    je(2,4) = je35;
    je(2,5) = je36;

    c11 = -(m1 + m2 + m3) * r0 * theta0dot * theta0dot * cos(theta0)
            - (l1 * (m1 + m2 + m3) + (m2 + m3) * r1) * (q1dot + theta0dot) * (q1dot + theta0dot) * cos(q1 + theta0)
            - (l2 * (m2 + m3) + m3 * r2) * (q1dot + q2dot + theta0dot) * (q1dot + q2dot + theta0dot) * cos(q1 + q2 + theta0)
            - l3 * m3 * (q1dot + q2dot + q3dot + theta0dot) * (q1dot + q2dot + q3dot + theta0dot) * cos(q1 + q2 + q3 + theta0);
    
    c21 = -(m1 + m2 + m3) * r0 * theta0dot * theta0dot * sin(theta0)
            - (l1 * (m1 + m2 + m3) + (m2 + m3) * r1) * (q1dot + theta0dot) * (q1dot + theta0dot) * sin(q1 + theta0)
            - (l2 * (m2 + m3) + m3 * r2) * (q1dot + q2dot + theta0dot) * (q1dot + q2dot + theta0dot) * sin(q1 + q2 + theta0)
            - l3 * m3 * (q1dot + q2dot + q3dot + theta0dot) * (q1dot + q2dot + q3dot + theta0dot) * sin(q1 + q2 + q3 + theta0);
    
    c31 = -q1dot * r0 * (l1 * (m1 + m2 + m3) + (m2 + m3) * r1) * (q1dot + 2 * theta0dot) * sin(q1)
            + l3 * m3 * cos(q3) * (- (q1dot + q2dot + q3dot) * r0 * (q1dot + q2dot + q3dot + 2 * theta0dot) * cos(q2) * sin(q1)
            - ((q2dot + q3dot) * (l1 + r1) * (2 * q1dot + q2dot + q3dot + 2 * theta0dot)
            + (q1dot + q2dot + q3dot) * r0 * (q1dot + q2dot + q3dot + 2 * theta0dot) * cos(q1)) * sin(q2))
            + (l2 * (m2 + m3) + m3 * r2) * ( - q2dot * (l1 + r1) * (2 * q1dot + q2dot + 2 * theta0dot) * sin(q2)
            - (q1dot + q2dot) * r0 * (q1dot + q2dot + 2 * theta0dot) * sin(q1 + q2))
            - l3 * m3 * (q3dot * (l2 + r2) * (2 * q1dot + 2 * q2dot + q3dot + 2 * theta0dot)
            + (q2dot + q3dot) * (l1 + r1) * (2 * q1dot + q2dot + q3dot + 2 * theta0dot) * cos(q2)
            + (q1dot + q2dot + q3dot) * r0 * (q1dot + q2dot + q3dot + 2 * theta0dot) * cos(q1 + q2)) * sin(q3);
    
    c41 = r0 * theta0dot * theta0dot * (l1 * (m1 + m2 + m3) + (m2 + m3) * r1 + l3 * m3 * cos(q2) * cos(q3)) * sin(q1)
            - l3 * m3 * ((q2dot + q3dot) * (l1 + r1) * (2 * q1dot + q2dot + q3dot + 2 * theta0dot)
            - r0 * theta0dot * theta0dot * cos(q1)) * cos(q3) * sin(q2)
            + (l2 * (m2 + m3) + m3 * r2) * ( - q2dot * (l1 + r1) * (2 * q1dot + q2dot + 2 * theta0dot) * sin(q2)
            + r0 * theta0dot * theta0dot * sin(q1 + q2))
            - l3 * m3 * (q3dot * (l2 + r2) * (2 * q1dot + 2 * q2dot + q3dot + 2 * theta0dot)
            + (q2dot + q3dot) * (l1 + r1) * (2 * q1dot + q2dot + q3dot + 2 * theta0dot) * cos(q2)
            - r0 * theta0dot * theta0dot * cos(q1 + q2)) * sin(q3);
    
    c51 = (l2 * (m2 + m3) + m3 * r2 + l3 * m3 * cos(q3)) 
            * ((l1 + r1) * (q1dot + theta0dot) * (q1dot + theta0dot) * sin(q2) 
            + r0 * theta0dot * theta0dot * sin(q1 + q2)) 
            + l3 * m3 * ((-1) * q3dot * (l2 + r2) * (2 * q1dot + 2 * q2dot + q3dot + 2 * theta0dot) 
            + (l1 + r1) * (q1dot + theta0dot) * (q1dot + theta0dot) * cos(q2) 
            + r0 * theta0dot * theta0dot * cos(q1 + q2)) * sin(q3);
    
    c61 = l3 * m3 * ((l2 + r2) * (q1dot + q2dot + theta0dot) * (q1dot + q2dot + theta0dot) * sin(q3) 
            + (l1 + r1) * (q1dot + theta0dot) * (q1dot + theta0dot) * sin(q2 + q3) 
            + r0 * theta0dot * theta0dot * sin(q1 + q2 + q3));

            h11 = m1 + m2 + m3 + m0;
    h12 = 0;
    h13 = (-1) * (m1 + m2 + m3) * r0 * sin(theta0) + (-1) * (l1 * (m1 + m2 + m3) + (m2 + m3) * r1) * sin(q1 + theta0) + (-1) * (l2 * (m2 + m3) + m3 * r2) * sin(q1 + q2 + theta0) + (-1) * l3 * m3 * sin(q1 + q2 + q3 + theta0);
    h14 = (-1)*(l1*(m1+m2+m3)+(m2+m3)*r1)*sin(q1+theta0)+(-1)*(l2*(m2+m3)+m3*r2)*sin(q1+q2+theta0)+(-1)*l3*m3*sin(q1+q2+q3+theta0);
    h15 = (-1) * (l2 * (m2 + m3) + m3 * r2) * sin(q1 + q2 + theta0) + (-1) * l3 * m3 * sin(q1 + q2 + q3 + theta0);
    h16 = (-1) * l3 * m3 * sin(q1 + q2 + q3 + theta0); 
    ///////////////
    h21 = 0;
    h22 = m1 + m2 + m3 + m0;
    h23 = (m1 + m2 + m3) * r0 * cos(theta0) + (l1 * (m1 + m2 + m3) + (m2 + m3) * r1) * cos(q1 + theta0) + (l2 * (m2 + m3) + m3 * r2) * cos(q1 + q2 + theta0) + l3 * m3 * cos(q1 + q2 + q3 + theta0); 
    h24 = (l1 * (m1 + m2 + m3) + (m2 + m3) * r1) * cos(q1 + theta0) + (l2 * (m2 + m3) + m3 * r2) * cos(q1 + q2 + theta0) + l3 * m3 * cos(q1 + q2 + q3 + theta0);
    h25 = (l2 * (m2 + m3) + m3 * r2) * cos(q1 + q2 + theta0) + l3 * m3 * cos(q1 + q2 + q3 + theta0);
    h26 = l3 * m3 * cos(q1 + q2 + q3 + theta0);
    ///////////////
    h31 = (-1) * (m1 + m2 + m3) * r0 * sin(theta0) + (-1) * (l1 * (m1 + m2 + m3) + (m2 + m3) * r1) * sin(q1 + theta0) + (-1) * (l2 * (m2 + m3) + m3 * r2) * sin(q1 + q2 + theta0) + (-1) * l3 * m3 * sin(q1 + q2 + q3 + theta0);
    h32 = (m1 + m2 + m3) * r0 * cos(theta0) + (l1 * (m1 + m2 + m3) + (m2 + m3) * r1) * cos(q1 + theta0) + (l2 * (m2 + m3) + m3 * r2) * cos(q1 + q2 + theta0) + l3 * m3 * cos(q1 + q2 + q3 + theta0);
    h33 = i1zz + i2zz + i3zz + ibzz + l2 * l2 * (m2 + m3) + l1 * l1 * (m1 + m2 + m3) + (m1 + m2) * r0 * r0 + 2 * l1 * (m2 + m3) * r1 + m2 * r1 * r1 + 2 * l2 * m3 * r2 + m3 * (l3 * l3 + r0 * r0 + r1 * r1 + r2 * r2) + 2 * (r0 * (l1 * (m1 + m2 + m3) + (m2 + m3) * r1) * cos(q1) + (l2 * (m2 + m3) + m3 * r2) * ((l1 + r1) * cos(q2) + r0 * cos(q1 + q2)) + l3 * m3 * (l2 + r2 + (l1 + r1) * cos(q2) + r0 * cos(q1 + q2)) * cos(q3) + (-1) * l3 * m3 * ((l1 + r1) * sin(q2) + r0 * sin(q1 + q2)) * sin(q3));
    h34 = i1zz + i2zz + i3zz + l2 * l2 * (m2 + m3) + l1 * l1 * (m1 + m2 + m3) + 2 * l1 * (m2 + m3) * r1 + m2 * r1 * r1 + 2 * l2 * m3 * r2 + m3 * (l3 * l3 + r1 * r1 + r2 * r2) + r0 * (l1 * (m1 + m2 + m3) + (m2 + m3) * r1) * cos(q1) + (l2 * (m2 + m3) + m3 * r2) * (2 * (l1 + r1) * cos(q2) + r0 * cos(q1 + q2)) + l3 * m3 * (2 * (l2 + r2 + (l1 + r1) * cos(q2)) + r0 * cos(q1 + q2)) * cos(q3) + (-1) * l3 * m3 * (2 * (l1 + r1) * sin(q2) + r0 * sin(q1 + q2)) * sin(q3);
    h35 = i2zz+i3zz+pow(l2,2)*(m2+m3)+2*l2*m3*r2+m3*(pow(l3,2)+pow(r2,2))+(l1+r1)*(l2*(m2+m3)+m3*r2)*cos(q2)+r0*(l2*(m2+m3)+m3*r2)*cos(q1+q2)+l3*m3*(2*(l2+r2)*cos(q3)+(l1+r1)*cos(q2+q3)+r0*cos(q1+q2+q3));
    h36 = i3zz+l3*l3*m3+l3*m3*((l2+r2)*cos(q3)+(l1+r1)*cos(q2+q3)+r0*cos(q1+q2+q3));
    //////////////
    h41 = (-1)*(l1*(m1+m2+m3)+(m2+m3)*r1)*sin(q1+theta0)+(-1)*(l2*(m2+m3)+m3*r2)*sin(q1+q2+theta0)+(-1)*l3*m3*sin(q1+q2+q3+theta0);
    h42 = (l1*(m1+m2+m3)+(m2+m3)*r1)*cos(q1+theta0)+(l2*(m2+m3)+m3*r2)*cos(q1+q2+theta0)+l3*m3*cos(q1+q2+q3+theta0);
    h43 = i1zz+i2zz+i3zz+l2*l2*(m2+m3)+l1*l1*(m1+m2+m3)+2*l1*(m2+m3)*r1+m2*r1*r1+2*l2*m3*r2+m3*(l3*l3+r1*r1+r2*r2)+r0*(l1*(m1+m2+m3)+(m2+m3)*r1)*cos(q1)+(l2*(m2+m3)+m3*r2)*(2*(l1+r1)*cos(q2)+r0*cos(q1+q2))+l3*m3*(2*(l2+r2+(l1+r1)*cos(q2))+r0*cos(q1+q2))*cos(q3)+(-1)*l3*m3*(2*(l1+r1)*sin(q2)+r0*sin(q1+q2))*sin(q3);
    h44 = i1zz+i2zz+i3zz+l2*l2*m2+l2*l2*m3+l3*l3*m3+l1*l1*(m1+m2+m3)+2*l1*(m2+m3)*r1+m2*r1*r1+m3*r1*r1+2*l2*m3*r2+m3*r2*r2+2*(l1+r1)*(l2*(m2+m3)+m3*r2)*cos(q2)+2*l3*m3*((l2+r2)*cos(q3)+(l1+r1)*cos(q2+q3));
    h45 = i2zz+i3zz+l2*l2*(m2+m3)+2*l2*m3*r2+m3*(l3*l3+r2*r2)+(l1+r1)*(l2*(m2+m3)+m3*r2)*cos(q2)+l3*m3*(2*(l2+r2)*cos(q3)+(l1+r1)*cos(q2+q3));
    h46 = i3zz+l3*l3*m3+l3*m3*(l2+r2)*cos(q3)+l3*m3*(l1+r1)*cos(q2+q3);
    //////////////
    h51 = (-1)*(l2*(m2+m3)+m3*r2)*sin(q1+q2+theta0)+(-1)*l3*m3*sin(q1+q2+q3+theta0);
    h52 = (l2*(m2+m3)+m3*r2)*cos(q1+q2+theta0)+l3*m3*cos(q1+q2+q3+theta0);
    h53 = i2zz+i3zz+pow(l2,2)*(m2+m3)+2*l2*m3*r2+m3*(l3*l3+r2*r2)+(l1+r1)*(l2*(m2+m3)+m3*r2)*cos(q2)+r0*(l2*(m2+m3)+m3*r2)*cos(q1+q2)+l3*m3*(2*(l2+r2)*cos(q3)+(l1+r1)*cos(q2+q3)+r0*cos(q1+q2+q3));
    h54 = i2zz+i3zz+l2*l2*(m2+m3)+2*l2*m3*r2+m3*(l3*l3+r2*r2)+(l1+r1)*(l2*(m2+m3)+m3*r2)*cos(q2)+l3*m3*(2*(l2+r2)*cos(q3)+(l1+r1)*cos(q2+q3));
    h55 = i2zz+i3zz+l2*l2*(m2+m3)+2*l2*m3*r2+m3*(l3*l3+r2*r2)+2*l3*m3*(l2+r2)*cos(q3);
    h56 = i3zz+l3*l3*m3+l3*m3*(l2+r2)*cos(q3);
    //////////////
    h61 = (-1)*l3*m3*sin(q1+q2+q3+theta0);
    h62 = l3*m3*cos(q1+q2+q3+theta0);
    h63 = i3zz+l3*l3*m3+l3*m3*((l2+r2)*cos(q3)+(l1+r1)*cos(q2+q3)+r0*cos(q1+q2+q3));
    h64 = i3zz+l3*l3*m3+l3*m3*(l2+r2)*cos(q3)+l3*m3*(l1+r1)*cos(q2+q3);
    h65 = i3zz+l3*l3*m3+l3*m3*(l2+r2)*cos(q3);
    h66 = i3zz+l3*l3*m3;